{
  "openapi": "3.0.0",
  "info": {
    "title": "checklists",
    "description": "Simple checklists API",
    "version": "1.0.0",
    "contact": {
      "name": "Renato Gama",
      "url": "https://github.com/renatoargh",
      "email": "renatoargh@gmail.com"
    }
  },
  "tags": [
    {
      "name": "lists",
      "description": "API operations for the `List` resources"
    },
    {
      "name": "items",
      "description": "API operations for the `Item` resources"
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "ApiItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "example": "3fe9780a-8847-4966-8cac-39cfcbd68e25"
          },
          "description": {
            "type": "string",
            "readOnly": true,
            "example": "Buy spaguetti"
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "to_do",
              "in_progress",
              "done"
            ],
            "example": "done"
          }
        },
        "required": [
          "id",
          "description",
          "status"
        ]
      },
      "ApiList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "example": "5e0a3c93-693f-4803-accc-6e339cf02381"
          },
          "userId": {
            "type": "string",
            "readOnly": true,
            "example": "9398438e-4fa9-4b24-980e-a73a4cd40daf"
          },
          "title": {
            "type": "string",
            "readOnly": true,
            "example": "My Groceries List"
          },
          "items": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiItem"
            }
          },
          "percentageDone": {
            "type": "number",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "userId",
          "title",
          "items",
          "percentageDone"
        ]
      },
      "ApiCreateList": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "My Groceries List"
          }
        },
        "required": [
          "title"
        ]
      },
      "ApiPatchList": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Italian dinner checklist"
          }
        }
      },
      "ItemStatus": {
        "type": "string",
        "enum": [
          "to_do",
          "in_progress",
          "done"
        ]
      },
      "ApiCreateItem": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "Buy spaguetti"
          },
          "status": {
            "example": "done",
            "default": "to_do",
            "$ref": "#/components/schemas/ItemStatus"
          }
        },
        "required": [
          "description"
        ]
      },
      "ApiPatchItem": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "Buy tortellini"
          },
          "status": {
            "example": "in_progress",
            "$ref": "#/components/schemas/ItemStatus"
          }
        }
      }
    }
  },
  "paths": {
    "/lists": {
      "get": {
        "operationId": "findLists",
        "summary": "Returns all lists that the user has access, optionally filtered by some criteria",
        "parameters": [
          {
            "name": "x-user-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of the `List` resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Operation not successful due to bad input data"
          },
          "500": {
            "description": "Unexpected error happened"
          }
        },
        "tags": [
          "lists"
        ]
      },
      "post": {
        "operationId": "createList",
        "summary": "Creates a new list",
        "parameters": [
          {
            "name": "x-user-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiCreateList"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "List was succesfuly created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiList"
                }
              }
            }
          },
          "400": {
            "description": "Operation not successful due to bad input data"
          },
          "500": {
            "description": "Unexpected error happened"
          }
        },
        "tags": [
          "lists"
        ]
      }
    },
    "/lists/{listId}": {
      "delete": {
        "operationId": "deleteList",
        "summary": "Deletes a list",
        "parameters": [
          {
            "name": "listId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "List was succesfuly deleted"
          },
          "400": {
            "description": "Operation not successful due to bad input data"
          },
          "500": {
            "description": "Unexpected error happened"
          }
        },
        "tags": [
          "lists"
        ]
      },
      "patch": {
        "operationId": "patchItem",
        "summary": "Allows to patch individual properties of a list. All fields are optional.",
        "parameters": [
          {
            "name": "listId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPatchList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List was susccesfuly patched. The updated list is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiList"
                }
              }
            }
          },
          "400": {
            "description": "Operation not successful due to bad input data"
          },
          "500": {
            "description": "Unexpected error happened"
          }
        },
        "tags": [
          "lists"
        ]
      }
    },
    "/lists/{listId}/items": {
      "post": {
        "operationId": "createItem",
        "summary": "Adds a new item to a list",
        "parameters": [
          {
            "name": "listId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiCreateItem"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item was succesfuly created. The updated list is returned.",
            "headers": {
              "x-item-id": {
                "description": "Id of the newly created item",
                "example": "4cc61a3d-5a70-4f64-9703-b9648785efee"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiList"
                }
              }
            }
          },
          "400": {
            "description": "Operation not successful due to bad input data"
          },
          "500": {
            "description": "Unexpected error happened"
          }
        },
        "tags": [
          "items"
        ]
      }
    },
    "/lists/{listId}/items/{itemId}": {
      "delete": {
        "operationId": "deleteItem",
        "summary": "Removes an item from a list",
        "parameters": [
          {
            "name": "listId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item was susccesfuly removed. The updated list is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiList"
                }
              }
            }
          },
          "400": {
            "description": "Operation not successful due to bad input data"
          },
          "500": {
            "description": "Unexpected error happened"
          }
        },
        "tags": [
          "items"
        ]
      },
      "patch": {
        "operationId": "patchItem",
        "summary": "Allows to patch individual properties of an item. Use this operation to mark an items as `done`. All fields are optional.",
        "parameters": [
          {
            "name": "listId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiPatchItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item was susccesfuly patched. The updated list is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiList"
                }
              }
            }
          },
          "400": {
            "description": "Operation not successful due to bad input data"
          },
          "500": {
            "description": "Unexpected error happened"
          }
        },
        "tags": [
          "items"
        ]
      }
    }
  }
}